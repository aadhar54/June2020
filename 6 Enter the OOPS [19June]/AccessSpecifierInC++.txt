The public keyword is an access specifier. Access specifiers define how the members (attributes and methods) of a class can be accessed. 

However, what if we want members to be private and hidden from the outside world?

In C++, there are three access specifiers:

public - members are accessible from outside the class
private - members cannot be accessed (or viewed) from outside the class
protected - members cannot be accessed from outside the class, however, they can be accessed in inherited classes. You will learn more about Inheritance later.
In the following example, we demonstrate the differences between public and private members:

Example
class MyClass {
  public:    // Public access specifier
    int x;   // Public attribute
  private:   // Private access specifier
    int y;   // Private attribute
};

int main() {
  MyClass myObj;
  myObj.x = 25;  // Allowed (public)
  myObj.y = 50;  // Not allowed (private)
  return 0;
}
If you try to access a private member, an error occurs:

error: y is private


Note: By default, all members of a class are private if you don't specify an access specifier:

Example
class MyClass {
  int x;   // Private attribute
  int y;   // Private attribute
  y = 100; //this is possible but outside the class not allowed
};